{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/OwnerComponents/Owner/OwnersAccounts/OwnersAccounts.js","containers/Owner/OwnerDetails/OwnerDetails.js"],"names":["closeErrorModal","type","actionTypes","handleHTTPError","error","props","response","status","execute404Handler","execute500Handler","executeOtherErrorHandler","instance","axios","create","baseURL","headers","headerType","getData","url","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","OwnersAccounts","accounts","map","account","accountType","format","dateCreated","id","md","responsive","striped","OwnerDetails","owner","useSelector","state","repository","useDispatch","useEffect","match","params","repositoryActions","name","dateOfBirth","length","className","renderTypeOfUserConditionally"],"mappings":"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","file":"static/js/9.de2d07cf.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_404_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst execute500Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_500_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst executeOtherErrorHandler = (error) => {\r\n    return {\r\n        type: actionTypes.HTTP_OTHER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const closeErrorModal = () => {\r\n    return {\r\n        type: actionTypes.CLOSE_ERROR_MODAL\r\n    }\r\n}\r\n\r\nexport const handleHTTPError = (error, props) => {\r\n    if (error.response.status === 404) {\r\n        return execute404Handler(props);\r\n    }\r\n    else if (error.response.status === 500) {\r\n        return execute500Handler(props);\r\n    }\r\n    else {\r\n        return executeOtherErrorHandler(error);\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:5000',\r\n    baseURL: 'https://brokerage.herokuapp.com',\r\n    headers: {\r\n        headerType: 'example header type'\r\n    }\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios/axios';\r\nimport * as errorHandlerActions from './errorHandlerActions';\r\n\r\nconst getDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const getData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.get(url)\r\n        .then(response => {\r\n            dispatch(getDataSuccess(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.post(url, obj)\r\n        .then(response => {\r\n            dispatch(postDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n        .then(response => {\r\n            dispatch(putDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.DELETE_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n        .then(response => {\r\n            dispatch(deleteDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nexport const closeSuccessModal = (url, props) =>{\r\n    return {\r\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props: props,\r\n        url: url\r\n    }\r\n}","import React from 'react';\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\n\r\nconst OwnersAccounts = (props) => {\r\n    let accounts = null;\r\n    if (props.accounts) {\r\n        accounts = props.accounts.map(account => {\r\n          return (\r\n                <tr key={account.id}>\r\n                    <td>{account.accountType}</td>\r\n                    <td><Moment format=\"MM/DD/YYYY\">{account.dateCreated}</Moment></td>\r\n                </tr>\r\n            );\r\n        })\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <Table responsive striped>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Account type</th>\r\n                            <th>Date created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {accounts}\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default OwnersAccounts;","import React, { useEffect } from 'react';\r\nimport { Col, Row, Well } from 'react-bootstrap';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport Moment from 'react-moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OwnersAccounts from '../../../components/OwnerComponents/Owner/OwnersAccounts/OwnersAccounts';\r\n\r\nconst OwnerDetails = (props) => {\r\n    const owner = useSelector(state => state.repository.data);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let id = props.match.params.id;\r\n        let url = '/api/owner/' + id + '/account';\r\n        dispatch(repositoryActions.getData(url, { ...props }));\r\n    },[props, dispatch])\r\n\r\n    const renderTypeOfUserConditionally = (owner) => {\r\n        let typeOfUser = null;\r\n    \r\n        if (owner.accounts && owner.accounts.length <= 2) {\r\n            typeOfUser = (\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Type of user:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <span className={'text-success'}>Beginner user.</span>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else {\r\n            typeOfUser = (\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Type of user:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <span className={'text-info'}>Advanced user.</span>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    \r\n        return typeOfUser;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Well>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Owner name:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        {owner.name}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Date of birth:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Moment format=\"MM/DD/YYYY\">{owner.dateOfBirth}</Moment>\r\n                    </Col>\r\n                </Row>\r\n                {renderTypeOfUserConditionally(owner)}\r\n            </Well>\r\n            <OwnersAccounts accounts={owner.accounts} />\r\n        </>\r\n    )\r\n}\r\n \r\nexport default OwnerDetails;\r\n"],"sourceRoot":""}