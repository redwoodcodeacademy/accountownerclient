{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/Modals/SuccessModal/SuccessModal.js","components/Modals/ErrorModal/ErrorModal.js","UI/Inputs/Input.js","Utility/InputConfiguration.js","Utility/FormUtility.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","containers/Owner/CreateOwner/CreateOwner.js"],"names":["closeErrorModal","type","actionTypes","handleHTTPError","error","props","response","status","execute404Handler","execute500Handler","executeOtherErrorHandler","instance","axios","create","baseURL","headers","headerType","getData","url","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","SuccessModal","show","backdrop","Header","modalHeaderText","Body","modalBodyText","Footer","bsStyle","onClick","successClick","okButtonText","ErrorModal","closeModal","input","inputField","errorMessage","invalid","shouldValidate","touched","elementType","controlId","id","componentClass","ControlLabel","sm","label","value","onChange","changed","onBlur","blur","selected","dateFormat","readOnly","className","showYearDropdown","dropdownMode","returnInputConfiguration","name","element","validation","required","maxLength","valid","address","dateOfBirth","moment","convertStateToArrayOfFormObjects","formObject","formElementsArray","key","push","config","executeValidationAndReturnFormElement","event","updatedOwnerForm","formElement","target","validationResponse","validationObject","isValid","trim","length","checkValidity","countInvalidElements","ownerForm","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","o","minLen","n","prototype","toString","call","slice","constructor","from","test","TypeError","CreateOwner","useState","setOwnerForm","isFormValid","setIsFormValid","showSuccessModal","useSelector","state","repository","showErrorModal","errorHandler","useDispatch","useEffect","formUtilityActions","handleChangeEvent","counter","horizontal","onSubmit","preventDefault","ownerToCreate","repositoryActions","map","Input","mdOffset","md","disabled","history"],"mappings":"0HAAA,gFAuBaA,EAAkB,WAC3B,MAAO,CACHC,KAAMC,MAIDC,EAAkB,SAACC,EAAOC,GACnC,OAA8B,MAA1BD,EAAME,SAASC,OA5BG,SAACF,GACvB,MAAO,CACHJ,KAAMC,IACNG,MAAOA,GA0BAG,CAAkBH,GAEM,MAA1BD,EAAME,SAASC,OAxBF,SAACF,GACvB,MAAO,CACHJ,KAAMC,IACNG,MAAOA,GAsBAI,CAAkBJ,GAlBA,SAACD,GAC9B,MAAO,CACHH,KAAMC,IACNE,MAAOA,GAkBAM,CAAyBN,K,gOC3BzBO,E,OAREC,EAAMC,OAAO,CAE1BC,QAAS,kCACTC,QAAS,CACLC,WAAY,yB,SCKPC,EAAU,SAACC,EAAKb,GACzB,OAAO,SAACc,GACJP,EAAMQ,IAAIF,GACTG,MAAK,SAAAf,GAVS,IAACgB,EAWZH,GAXYG,EAWYhB,EAASgB,KAVlC,CACHrB,KAAMC,IACNoB,KAAMA,QAULC,OAAM,SAAAnB,GACHe,EAASK,IAAoCpB,EAAOC,SAYnDoB,EAAW,SAACP,EAAKQ,EAAKrB,GAC/B,OAAO,SAACc,GACJP,EAAMe,KAAKT,EAAKQ,GACfL,MAAK,SAAAf,GACFa,EAXY,SAACb,GACrB,MAAO,CACHL,KAAMC,IACNI,SAAUA,GAQGsB,CAAgBtB,OAE5BiB,OAAM,SAAAnB,GACHe,EAASK,IAAoCpB,EAAOC,SAYnDwB,EAAU,SAACX,EAAKQ,EAAKrB,GAC9B,OAAO,SAACc,GACJP,EAAMkB,IAAIZ,EAAKQ,GACdL,MAAK,SAAAf,GACFa,EAXW,SAACb,GACpB,MAAO,CACHL,KAAMC,IACNI,SAAUA,GAQGyB,CAAezB,OAE3BiB,OAAM,SAAAnB,GACHe,EAASK,IAAoCpB,EAAOC,SAYnD2B,EAAa,SAACd,EAAKb,GAC5B,OAAO,SAACc,GACJP,EAAMqB,OAAOf,GACZG,MAAK,SAAAf,GACFa,EAXc,SAACb,GACvB,MAAO,CACHL,KAAMC,IACNI,SAAUA,GAQG4B,CAAkB5B,OAE9BiB,OAAM,SAAAnB,GACHe,EAASK,IAAoCpB,EAAOC,SAKnD8B,EAAoB,SAACjB,EAAKb,GACnC,MAAO,CACHJ,KAAMC,IACNG,MAAOA,EACPa,IAAKA,K,wFChEEkB,IAhBM,SAAC/B,GAClB,OACI,eAAC,IAAD,CAAOgC,KAAMhC,EAAMgC,KAAMC,SAAS,SAAlC,UACI,cAAC,IAAMC,OAAP,UACKlC,EAAMmC,kBAEX,cAAC,IAAMC,KAAP,UACI,4BAAIpC,EAAMqC,kBAEd,cAAC,IAAMC,OAAP,UACI,cAAC,IAAD,CAAQC,QAAQ,UAAUC,QAASxC,EAAMyC,aAAzC,SAAwDzC,EAAM0C,sB,kECM/DC,IAhBI,SAAC3C,GAChB,OACQ,eAAC,IAAD,CAAOgC,KAAMhC,EAAMgC,KAAMC,SAAS,SAAlC,UACI,cAAC,IAAMC,OAAP,UACKlC,EAAMmC,kBAEX,cAAC,IAAMC,KAAP,UACI,4BAAIpC,EAAMqC,kBAEd,cAAC,IAAMC,OAAP,UACI,cAAC,IAAD,CAAQC,QAAQ,SAASC,QAASxC,EAAM4C,WAAxC,SAAqD5C,EAAM0C,sB,kFC2ChEG,IAnDD,SAAC7C,GACX,IAAI8C,EAAa,KACbC,EAAe,KAMnB,OAJI/C,EAAMgD,SAAWhD,EAAMiD,gBAAkBjD,EAAMkD,UAC/CH,EAAgB,6BAAK/C,EAAM+C,gBAGvB/C,EAAMmD,aACV,IAAK,QACDL,EACI,eAAC,IAAD,CAAWM,UAAWpD,EAAMqD,GAA5B,UACI,cAAC,IAAD,CAAKC,eAAgBC,IAAcC,GAAI,EAAvC,SACKxD,EAAMyD,QAEX,cAAC,IAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAD,CAAa5D,KAAMI,EAAMJ,KAAM8D,MAAO1D,EAAM0D,MAAOC,SAAU3D,EAAM4D,QAASC,OAAQ7D,EAAM8D,SAE9F,cAAC,IAAD,UACI,6BAAKf,SAIjB,MACJ,IAAK,aACDD,EACI,eAAC,IAAD,CAAWM,UAAWpD,EAAMqD,GAA5B,UACI,cAAC,IAAD,CAAKC,eAAgBC,IAAcC,GAAI,EAAvC,SACKxD,EAAMyD,QAEX,cAAC,IAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAD,CAAYO,SAAU/D,EAAM0D,MAAOM,WAAW,aAAaC,UAAQ,EAC/DN,SAAU3D,EAAM4D,QAASM,UAAU,oBACnCC,kBAAgB,EAACC,aAAa,aAEtC,cAAC,IAAD,UACI,6BAAKrB,SAIjB,MACJ,QAASD,EAAa,KAG1B,OACI,mCACKA,M,uDCpDb,wDAEauB,EAA2B,WACpC,MAAO,CACHC,KAAM,CACFC,QAAS,QAAS3E,KAAM,OAAQ8D,MAAO,GACvCc,WAAY,CAAEC,UAAU,EAAMC,UAAW,IAAMC,OAAO,EAAOzB,SAAS,EACtEH,aAAc,GAAIU,MAAO,SAE7BmB,QAAS,CACLL,QAAS,QAAS3E,KAAM,OAAQ8D,MAAO,GACvCc,WAAY,CAAEC,UAAU,EAAMC,UAAW,KAAOC,OAAO,EAAOzB,SAAS,EACvEH,aAAc,GAAIU,MAAO,YAE7BoB,YAAa,CACTN,QAAS,aAAc3E,KAAM,OAAQ8D,MAAOoB,MAC5CH,OAAO,EAAMzB,SAAS,EACtBH,aAAc,GAAIU,MAAO,qB,mJCjBxBsB,EAAmC,SAACC,GAC7C,IAAMC,EAAoB,GAC1B,IAAK,IAAIC,KAAOF,EACZC,EAAkBE,KAAK,CACnB9B,GAAI6B,EACJE,OAAQJ,EAAWE,KAI3B,OAAOD,GA2BEI,EAAwC,SAACC,EAAOC,EAAkBlC,GAC3E,IAAImC,EAAW,eAAQD,EAAiBlC,IACxCmC,EAAY9B,MAAe,gBAAPL,EAAuBiC,EAAQA,EAAMG,OAAO/B,MAChE8B,EAAYtC,SAAU,EAEtB,IAAMwC,EA7BY,SAAChC,EAAOc,GAC1B,IAAImB,EAAmB,CACnBC,SAAS,EACT7C,aAAc,IAGlB,OAAIyB,GACIA,EAAWC,WACXkB,EAAiBC,QAA2B,KAAjBlC,EAAMmC,OACjCF,EAAiB5C,aAAe4C,EAAiBC,QAAU,GAAK,qBAGhED,EAAiBC,SAAWpB,EAAWE,YACvCiB,EAAiBC,QAAUlC,EAAMoC,QAAUtB,EAAWE,UACtDiB,EAAiB5C,aAAe4C,EAAiBC,QAAU,GAA3B,gCAAyDpB,EAAWE,UAApE,gBAG7BiB,GAGAA,EASgBI,CAAcP,EAAY9B,MAAO8B,EAAYhB,YAKxE,OAHAgB,EAAYb,MAAQe,EAAmBE,QACvCJ,EAAYzC,aAAe2C,EAAmB3C,aAEvCyC,GAGEQ,EAAuB,SAACC,GACjC,IAAID,EAAuB,EAC3B,IAAK,IAAIzB,KAAW0B,EAChB,IAAKA,EAAU1B,GAASI,MAAO,CAC3BqB,GAA8C,EAC9C,MAGR,OAAOA,I,oDCzDI,SAASE,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIL,UAAQM,EAAMD,EAAIL,QAE/C,IAAK,IAAIO,EAAI,EAAGC,EAAO,IAAIC,MAAMH,GAAMC,EAAID,EAAKC,IAC9CC,EAAKD,GAAKF,EAAIE,GAGhB,OAAOC,ECHM,SAASE,EAAeL,EAAKE,GAC1C,OCLa,SAAyBF,GACtC,GAAII,MAAME,QAAQN,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKE,GACjD,GAAsB,qBAAXK,QAA4BA,OAAOC,YAAYC,OAAOT,GAAjE,CACA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAIO,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAK1B,KAAK+B,EAAGxD,QAET2C,GAAKQ,EAAKf,SAAWO,GAH8CS,GAAK,IAK9E,MAAOQ,GACPP,GAAK,EACLC,EAAKM,EACL,QACA,IACOR,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBV,EAAKE,IGJ3C,SAAqCkB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIb,OAAOc,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYxD,MAC7C,QAANmD,GAAqB,QAANA,EAAoBlB,MAAMwB,KAAKR,GACxC,cAANE,GAAqB,2CAA2CO,KAAKP,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BrB,EAAKE,IILjF,WACb,MAAM,IAAI4B,UAAU,6IJIgF,G,iGKwFvFC,UAlFK,SAAClI,GAAW,IAAD,IAEOmI,mBAAS,IAFhB,GAEpBlC,EAFoB,KAETmC,EAFS,SAGWD,oBAAS,GAHpB,GAGpBE,EAHoB,KAGPC,EAHO,KAKrBC,EAAmBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWH,oBACzDI,EAAiBH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAAaD,kBACzD5F,EAAeyF,aAAY,SAAAC,GAAK,OAAIA,EAAMG,aAAa7F,gBAEvDjC,EAAW+H,cAEjBC,qBAAU,WACNV,EAAa/D,iBACd,IAEH,IAAMY,EAAoB8D,IAAA,eAAyD9C,IAe7E+C,EAAoB,SAAC1D,EAAOjC,GAC9B,IAAMkC,EAAgB,eAAQU,GAC9BV,EAAiBlC,GAAM0F,IAAyDzD,EAAOC,EAAkBlC,GAEzG,IAAM4F,EAAUF,IAAwCxD,GAExD6C,EAAa7C,GACb+C,EAA2B,IAAZW,IAOnB,OACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAMC,YAAU,EAACC,SA7BL,SAAC7D,GACjBA,EAAM8D,iBAEN,IAAMC,EAAgB,CAClB/E,KAAM2B,EAAU3B,KAAKZ,MACrBkB,QAASqB,EAAUrB,QAAQlB,MAC3BmB,YAAaoB,EAAUpB,YAAYnB,OAIvC5C,EAASwI,IADG,aAC6BD,EAAhC,eAAoDrJ,MAmBzD,UAEQiF,EAAkBsE,KAAI,SAAAhF,GAClB,OAAO,cAACiF,EAAA,EAAD,CAAwBrG,YAAaoB,EAAQa,OAAOb,QACvDlB,GAAIkB,EAAQlB,GAAII,MAAOc,EAAQa,OAAO3B,MACtC7D,KAAM2E,EAAQa,OAAOxF,KAAM8D,MAAOa,EAAQa,OAAO1B,MACjDE,QAAS,SAAC0B,GAAD,OAAW0D,EAAkB1D,EAAOf,EAAQlB,KACrDN,aAAcwB,EAAQa,OAAOrC,aAC7BC,SAAUuB,EAAQa,OAAOT,MAAO1B,eAAgBsB,EAAQa,OAAOZ,WAC/DtB,QAASqB,EAAQa,OAAOlC,QACxBY,KAAM,SAACwB,GAAD,OAAW0D,EAAkB1D,EAAOf,EAAQlB,MAPnCkB,EAAQlB,OAUnC,uBACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKoG,SAAU,EAAGC,GAAI,EAAtB,SACI,cAAC,IAAD,CAAQ9J,KAAK,SAAS2C,QAAQ,OAAOoH,UAAWtB,EAAhD,sBAEJ,cAAC,IAAD,CAAKqB,GAAI,EAAT,SACI,cAAC,IAAD,CAAQnH,QAAQ,SAASC,QAzBjB,WACxBxC,EAAM4J,QAAQzE,KAAK,gBAwBH,4BAIZ,cAACpD,EAAA,EAAD,CAAcC,KAAMuG,EAChBpG,gBAAiB,kBACjBE,cAAe,gCACfK,aAAc,KACdD,aAAc,kBAAM3B,EAASwI,IAAoC,cAApC,eAAwDtJ,QACzF,cAAC2C,EAAA,EAAD,CAAYX,KAAM2G,EACdxG,gBAAiB,gBACjBE,cAAeU,EACfL,aAAc,KAAME,WAAY,kBAAM9B,EAASK","file":"static/js/6.3ce8801f.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_404_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst execute500Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_500_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst executeOtherErrorHandler = (error) => {\r\n    return {\r\n        type: actionTypes.HTTP_OTHER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const closeErrorModal = () => {\r\n    return {\r\n        type: actionTypes.CLOSE_ERROR_MODAL\r\n    }\r\n}\r\n\r\nexport const handleHTTPError = (error, props) => {\r\n    if (error.response.status === 404) {\r\n        return execute404Handler(props);\r\n    }\r\n    else if (error.response.status === 500) {\r\n        return execute500Handler(props);\r\n    }\r\n    else {\r\n        return executeOtherErrorHandler(error);\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:5000',\r\n    baseURL: 'https://brokerage.herokuapp.com',\r\n    headers: {\r\n        headerType: 'example header type'\r\n    }\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios/axios';\r\nimport * as errorHandlerActions from './errorHandlerActions';\r\n\r\nconst getDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const getData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.get(url)\r\n        .then(response => {\r\n            dispatch(getDataSuccess(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.post(url, obj)\r\n        .then(response => {\r\n            dispatch(postDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n        .then(response => {\r\n            dispatch(putDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.DELETE_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n        .then(response => {\r\n            dispatch(deleteDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nexport const closeSuccessModal = (url, props) =>{\r\n    return {\r\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props: props,\r\n        url: url\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst SuccessModal = (props) => {\r\n    return (\r\n        <Modal show={props.show} backdrop='static'>\r\n            <Modal.Header>\r\n                {props.modalHeaderText}\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>{props.modalBodyText}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button bsStyle=\"success\" onClick={props.successClick}>{props.okButtonText}</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SuccessModal;","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst ErrorModal = (props) => {\r\n    return (\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"danger\" onClick={props.closeModal}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n    )\r\n}\r\n\r\nexport default ErrorModal;","import React from 'react';\r\nimport { FormGroup, Col, FormControl, ControlLabel } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputField = null;\r\n    let errorMessage = null;\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        errorMessage = (<em>{props.errorMessage}</em>);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case 'input':\r\n            inputField = (\r\n                <FormGroup controlId={props.id}>\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        {props.label}\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <FormControl type={props.type} value={props.value} onChange={props.changed} onBlur={props.blur} />\r\n                    </Col>\r\n                    <Col>\r\n                        <em>{errorMessage}</em>\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n            break;\r\n        case 'datePicker':\r\n            inputField = (\r\n                <FormGroup controlId={props.id}>\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        {props.label}\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <DatePicker selected={props.value} dateFormat=\"MM/DD/YYYY\" readOnly\r\n                            onChange={props.changed} className='datePickerControl'\r\n                            showYearDropdown dropdownMode=\"select\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <em>{errorMessage}</em>\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n            break;\r\n        default: inputField = null;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {inputField}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default input;","import moment from 'moment';\r\n\r\nexport const returnInputConfiguration = () => {\r\n    return {\r\n        name: {\r\n            element: 'input', type: 'text', value: '',\r\n            validation: { required: true, maxLength: 60 }, valid: false, touched: false,\r\n            errorMessage: '', label: 'Name:'\r\n        },\r\n        address: {\r\n            element: 'input', type: 'text', value: '',\r\n            validation: { required: true, maxLength: 100 }, valid: false, touched: false,\r\n            errorMessage: '', label: 'Address:'\r\n        },\r\n        dateOfBirth: {\r\n            element: 'datePicker', type: 'text', value: moment(),\r\n            valid: true, touched: false,\r\n            errorMessage: '', label: 'Date of birth:'\r\n        }\r\n    }\r\n}","export const convertStateToArrayOfFormObjects = (formObject) => {\r\n    const formElementsArray = [];\r\n    for (let key in formObject) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: formObject[key]\r\n        });\r\n    }\r\n\r\n    return formElementsArray;\r\n}\r\n\r\nconst checkValidity = (value, validation) => {\r\n    let validationObject = {\r\n        isValid: true,\r\n        errorMessage: ''\r\n    };\r\n\r\n    if (validation) {\r\n        if (validation.required) {\r\n            validationObject.isValid = value.trim() !== '';\r\n            validationObject.errorMessage = validationObject.isValid ? '' : 'Field is required';\r\n        }\r\n\r\n        if (validationObject.isValid && validation.maxLength) {\r\n            validationObject.isValid = value.length <= validation.maxLength;\r\n            validationObject.errorMessage = validationObject.isValid ? '' : `Not allowed more than ${validation.maxLength} characters`;\r\n        }\r\n\r\n        return validationObject;\r\n    }\r\n    else {\r\n        return validationObject;\r\n    }\r\n}\r\n\r\nexport const executeValidationAndReturnFormElement = (event, updatedOwnerForm, id) => {\r\n    let formElement = { ...updatedOwnerForm[id] };\r\n    formElement.value = id === 'dateOfBirth' ? event : event.target.value;\r\n    formElement.touched = true;\r\n\r\n    const validationResponse = checkValidity(formElement.value, formElement.validation);\r\n\r\n    formElement.valid = validationResponse.isValid;\r\n    formElement.errorMessage = validationResponse.errorMessage;\r\n\r\n    return formElement;\r\n}\r\n\r\nexport const countInvalidElements = (ownerForm) => {\r\n    let countInvalidElements = 0;\r\n    for (let element in ownerForm) {\r\n        if (!ownerForm[element].valid) {\r\n            countInvalidElements = countInvalidElements + 1;\r\n            break;\r\n        }\r\n    }\r\n    return countInvalidElements;\r\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\r\nimport Input from '../../../UI/Inputs/Input';\r\nimport { Form, Well, Button, FormGroup, Col } from 'react-bootstrap';\r\nimport { returnInputConfiguration } from '../../../Utility/InputConfiguration';\r\nimport * as formUtilityActions from '../../../Utility/FormUtility';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerActions';\r\nimport SuccessModal from '../../../components/Modals/SuccessModal/SuccessModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/ErrorModal';\r\n\r\nconst CreateOwner = (props) => {\r\n\r\n    const [ownerForm, setOwnerForm] = useState({});\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\r\n    const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\r\n    const errorMessage = useSelector(state => state.errorHandler.errorMessage);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        setOwnerForm(returnInputConfiguration());\r\n    }, []);\r\n\r\n    const formElementsArray = formUtilityActions.convertStateToArrayOfFormObjects({ ...ownerForm });\r\n\r\n    const createOwner = (event) => {\r\n        event.preventDefault();\r\n\r\n        const ownerToCreate = {\r\n            name: ownerForm.name.value,\r\n            address: ownerForm.address.value,\r\n            dateOfBirth: ownerForm.dateOfBirth.value\r\n        }\r\n    \r\n        const url = '/api/owner';\r\n        dispatch(repositoryActions.postData(url, ownerToCreate, { ...props }));\r\n    }\r\n\r\n    const handleChangeEvent = (event, id) => {\r\n        const updatedOwnerForm = { ...ownerForm };\r\n        updatedOwnerForm[id] = formUtilityActions.executeValidationAndReturnFormElement(event, updatedOwnerForm, id);\r\n\r\n        const counter = formUtilityActions.countInvalidElements(updatedOwnerForm);\r\n\r\n        setOwnerForm(updatedOwnerForm);\r\n        setIsFormValid(counter === 0);\r\n    }\r\n\r\n    const redirectToOwnerList = () => {\r\n        props.history.push('/owner-List');\r\n    }\r\n\r\n    return (\r\n        <Well>\r\n            <Form horizontal onSubmit={createOwner}>\r\n                {\r\n                    formElementsArray.map(element => {\r\n                        return <Input key={element.id} elementType={element.config.element}\r\n                            id={element.id} label={element.config.label}\r\n                            type={element.config.type} value={element.config.value}\r\n                            changed={(event) => handleChangeEvent(event, element.id)}\r\n                            errorMessage={element.config.errorMessage}\r\n                            invalid={!element.config.valid} shouldValidate={element.config.validation}\r\n                            touched={element.config.touched}\r\n                            blur={(event) => handleChangeEvent(event, element.id)} />\r\n                    })\r\n                }\r\n                <br />\r\n                <FormGroup>\r\n                    <Col mdOffset={6} md={1}>\r\n                        <Button type='submit' bsStyle='info' disabled={!isFormValid}>Create</Button>\r\n                    </Col>\r\n                    <Col md={1}>\r\n                        <Button bsStyle='danger' onClick={redirectToOwnerList}>Cancel</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n            <SuccessModal show={showSuccessModal}\r\n                modalHeaderText={'Success message'}\r\n                modalBodyText={'Action completed successfully'}\r\n                okButtonText={'OK'}\r\n                successClick={() => dispatch(repositoryActions.closeSuccessModal('/owner-List', { ...props }))} />\r\n            <ErrorModal show={showErrorModal}\r\n                modalHeaderText={'Error message'}\r\n                modalBodyText={errorMessage}\r\n                okButtonText={'OK'} closeModal={() => dispatch(errorHandlerActions.closeErrorModal())} />\r\n        </Well>\r\n    )\r\n}\r\n\r\nexport default CreateOwner;"],"sourceRoot":""}